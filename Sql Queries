Inserts:

$insert = "INSERT INTO GROCERYSTORE (store_id, address_id, store_name, opening_time, closing_time, phone) VALUE (?, ?, ?, FROM_UNIXTIME(?), FORM_UNIXTIME(?), ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("iisiis", $store_id, $address_id, $store_name, $opening_time, $closing_time, $phone);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO ITEM (item_id, item_name, food_group, exp_date, quantity, listed_price, wholesale_price, description) VALUE (?, ?, ?, FROM_UNIXTIME(?), ?, ?, ?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("issiidds", $item_id, $item_name, $food_group, $exp_date, $quantity, $listed_price, $wholesale_price, $description);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO MANAGES (username, store_address) VALUE (?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("si", $username, $store_address);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO PAYMENTS (username, payment_name, account_number, routing_number) VALUE (?, ?, ?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("ssii", $username, $payment_name, $account_number, $routing_number);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO ORDERS (order_id, delivery_instructions, delivery_time, order_placed_date, order_placed_time) VALUE (?, ?, FROM_UNIXTIME(?), FROM_UNIXTIME(?), FROM_UNIXTIME(?));";
$stmt = $conn->prepare($insert);
$stmt->bind_param("isiii", $order_id, $delivery_instructions, $delivery_time, $order_placed_date, $order_placed_time);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO ORDERBY (order_id, buyer_username) VALUE (?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("is", $order_id, $buyer_username);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO SELECTITEM (order_id, quantity, item_id) VALUE (?, ?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("iii", $order_id, $quantity, $item_id);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO ORDERFROM (order_id, store_id) VALUE (?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("ii", $order_id, $store_id);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO SOLDAT (item_id, store_id) VALUE (?, ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("ii", $item_id, $store_id);
$stmt->execute();
$conn->close();

$insert = "INSERT INTO DELIVEREDBY (order_id, delivery_instructions, delivery_time, delivery_date, is_delivered) VALUE (?, ?, FROM_UNIXTIME(?), FROM_UNIXTIME(?), ?);";
$stmt = $conn->prepare($insert);
$stmt->bind_param("isiii", $order_id, $delivery_instructions, $delivery_time, $delivery_date, $is_delivered);
$stmt->execute();
$conn->close();

Updates:

(Updates item quantity in store after an order is placed)
UPDATE item,
	 (SELECT order_id, item_id, store_id, quantity
     FROM (orders NATURAL JOIN selectitem) NATURAL JOIN orderfrom
     WHERE orders.order_id = 13075)
     AS itemsToUpdate
SET item.quantity = item.quantity - itemsToUpdate.quantity
WHERE item.item_id = itemsToUpdate.item_id

Deletes:

Selects:

(Buyer Account Information Page 12)
$select = "SELECT * FROM USER WHERE username=?");
$stmt = $conn->prepare($select);
$stmt->bind_param("s", $username);
$stmt->execute();
$res = $stmt->get_result();
$row = $res->fetch_assoc();
$first_name = $row['first_name'];
$last_name = $row['last_name'];
$email = $row['email'];

$select = "SELECT * FROM BUYER WHERE username=?;";
$stmt = $conn->prepare($select);
$stmt->bind_param("s", $username);
$stmt->execute();
$res = $stmt->get_result();
$row = $res->fetch_assoc();
$phone = $row['phone'];
$addressID = $row['address'];
$storeID = $row['default_store_id'];

$select = "SELECT * FROM ADDRESS WHERE id=?;";
$stmt = $conn->prepare($select);
$stmt->bind_param("i", $addressID);
$stmt->execute();
$res = $stmt->get_result();
$row = $res->fetch_assoc();
$buyerStreet = $row['street'];
$buyerCity = $row['city'];
$buyerState = $row['state'];
$buyerZip = $row['zip_code'];

$select = "SELECT * FROM GROCERYSTORE WHERE store_id=?;";
$stmt = $conn->prepare($select);
$stmt->bind_param("i", $storeID);
$stmt->execute();
$res = $stmt->get_result();
$row = $res->fetch_assoc();
$storeName = $row['store_name'];
$storeAddressID = $row['address_id'];

$select "SELECT * FROM ADDRESS WHERE id=?;";
$stmt = $conn->prepare($select);
$stmt->bind_param("i", %storeAddressID);
$stmt->execute();
$res = $stmt->get_result();
$row = $res->fetch_assoc();
$storeAddress = $row['street'];

$select "SELECT * FROM PAYMENTS WHERE id=?;";
$stmt = $conn->prepare($select);
$stmt->bind_param("s", %username);
$stmt->execute();
$res = $stmt->get_result();
$row = $res->fetch_assoc();
$accountNum = $row['account_number'];
$routingNum = $row['routing_number'];

$conn->close();


(List of Stores page 13)
$query = "SELECT address_id, store_name, phone, opening_time, closing_time FROM GROCERYSTORE ORDER BY store_name";
$result = $conn->query($query);
while($row = $result->fetch_assoc()) {
  $addressID = $row['address_id'];
  $query = "SELECT street, city, state, zip_code FROM ADDRESS WHERE id='$addressID'";
  $addressResult = $conn->query($query);
  $addressRow = $addressResult->fetch_assoc();
  echo $row['store_name'] . " " . $addressRow['street'] . ", " . $addressRow['city'] . ", " . $addressRow['state'] . " " . $addressRow['zip_code'] . " " . $row['phone'] . " " . $row['opening_time'] . "-" . $row['closing_time'];
}


(Item List page 15)
$query = "SELECT item_name, description, exp_date, listed_price, quantity FROM ITEM WHERE food_group='$typeOfItem'";
$result = $conn->query($query);
while ($row = $result->fetch_assoc()) {
  echo $row['item_name'] . " " . $row['description'] . " " . $row['exp_date'] . " " . $row['listed_price'] . " " . $row['quantity'];
}


(Cart page 16)
$query = "SELECT item_id, quantity FROM SELECTITEM WHERE order_id='$orderID'";
$result = $conn->query($query);
while ($row = $result->fetch_assoc()) {
  $query = "SELECT item_name, description, listed_price, quantity FROM ITEM WHERE item_id='$row['item_id']'";
  $itemResult = $conn->query($query);
  $itemRow = $result->fetch_assoc();
  echo itemRow['item_name'] . " " . $itemRow['description'] . " " . $row['quantity'] . " " . $itemRow['listed_price'] . " " . $itemRow['quantity'];
}


(Payment Method page 18)
$query = "SELECT default_payment FROM BUYER WHERE username='$username'";
$result = $conn->query($query);
$row = $result->fetch_assoc();
$defaultPayment = $row['default_payment'];
$query = "SELECT payment_name, account_number, routing_number FROM PAYMENTS WHERE username='$username'";
$result = $conn->query($query);
while ($row = $result->fetch_assoc()) {
  if ($row['payment_name'] == $defaultPayment)
    echo $row['payment_name'] . " " . $row['account_number'] . " " . $row['routing_number'] . " yes";
  else
    echo $row['payment_name'] . " " . $row['account_number'] . " " . $row['routing_number'] . " yes";
}


(Receipt page 19)
// Do we need a query for this? Or could we store the information during checkout?
// Because payment name isn't tied to orders.


(Order History page 20)
$query = "SELECT order_id, order_placed_date FROM ORDERS WHERE order_id=(SELECT order_id FROM ORDERBY WHERE buyer_username='$username') ORDER BY order_placed_date ASC";
$result = conn->query($query);
while ($row = $result->fetch_assoc()) {
  // Add rest of query statements to get store name, total price, total num of items, and delivered status
}

(Revenue Report)
SELECT grocerystore.store_name, SUM(selectitem.quantity) AS quantity, SUM(item.listed_price) AS listed_price, SUM(item.wholesale_price) AS wholesale_price
FROM (((orders NATURAL JOIN selectitem) NATURAL JOIN (SELECT item_id, listed_price, wholesale_price FROM item) AS item) NATURAL JOIN orderfrom) NATURAL JOIN (SELECT store_name, store_id FROM grocerystore) AS grocerystore
WHERE store_id = 1
